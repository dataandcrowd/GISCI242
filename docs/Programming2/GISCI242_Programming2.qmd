---
title: "Gentle Introduction to Programming Part 2"
subtitle: ": GIS with Geopandas"
date: 04/22/2024
date-format: long
author:
  - name: Hyesop Shin
    orcid: 0000-0003-2637-7933
    email: hyesop.shin@auckland.ac.nz
    affiliations:
      - name: University of Auckland
        address: 23 Symonds Street
        city: Auckland
        postal-code: 1010
format: 
  revealjs:
      logo: Figs/uoa-logo.png
      css: logo.css
      slide-number: true
      show-slide-number: print
editor: source
include-in-header:
  - text: |
      <style type="text/css">
      ul li ul li {
        font-size: 0.7em;
      }
      </style>
---

## Make sure you download some examples for today's class
* countries of the world (csv, txt)
* ice cream ratings
* flavours
* customer call list


## Recap of Previous Lecture

-   Maths
-   How to assign variables, lists
-   For loops
-   Conditional statements
-   How to call packages using `import` (tidy bit)

## What will we cover today?

-   How to import spreadsheet data with `pandas`
-   How to clean and explore data
-   Data Visualisation
-   How to play with GIS data with `geopandas`

::: notes
:::

## Getting started with Pandas
* Reading in files
* Filtering columns and rows
* `Group by` and `Aggregation`
* Merging dataframes
* Visulisation


## Reading in Files

![](https://pandas.pydata.org/docs/_images/02_io_readwrite.svg)

::: {style="font-size: 100%;"}
```python 
import pandas as pd
```
:::

<br>

* Disclaimer: 
    - loading files in your machine is different to how you would uploaded in on **Google Colab**.
    - Visit the <span style="color:blue;">Live Coding Tab</span> for examples

---

### Reading in different file types
* `.csv`
* `.txt`
* `.xlsx`
* `.json`
* ...

---

### Understanding the data structure
* The head/tail/info methods and the dtypes attribute are convenient for a first check.


```python
df.info() ## technical summary (e.g. dataframe, rows/columnns and their names)
df.dtype. ## generic summary
```

<br>

```python
df.head()
df.tail()
```


## Subsetting the data frame

---

### Subsetting the data frame: Rows

![](https://pandas.pydata.org/docs/_images/03_subset_rows.svg)

* Subset population over 50 million
* Subset Population over 50 million + Continent
* Subset continents either Europe or South America
* Remove NA / NaN values

::: {style="font-size: 50%;"}
When combining multiple conditional statements, each condition must be surrounded by parentheses `()`. Moreover, you can not use `or`/`and` but need to use the or operator `|` and the and operator `&`.
:::


---

### Subsetting the data frame: Columns

![](https://pandas.pydata.org/docs/_images/03_subset_columns.svg)

---

### Subsetting the dataframe by locations

Iâ€™m interested in rows 10 till 25 and columns 3 to 5.

```python
titanic.iloc[9:25, 2:5]
```

---

## Quick Summary
REMEMBER
* When selecting subsets of data, square brackets `[]` are used.
* Inside these brackets, you can use a single column/row label, a list of column/row labels, a slice of labels, a conditional expression or a colon.
* Select specific rows and/or columns using `loc` when using the row and column names.
* Select specific rows and/or columns using `iloc` when using the positions in the table.
* You can assign new values to a selection based on `loc`/`iloc.`


## Create New columns from the existing df




## Grouping and Aggregation



## Merge df's





---------------------------------------------------------------------------------

## Getting Started with GeoPandas
* Objective: Familiarize students with GeoPandas and its uses in spatial data analysis.
* Topics Covered:
    * ~~Installation of GeoPandas~~.
    * ~~Basic data structures in GeoPandas~~.
    * Reading and writing spatial data.

## Working with Geospatial Data
Objective: Teach how to manipulate and process geospatial data using GeoPandas.
Topics Covered:
Loading spatial data from different formats (Shapefile, GeoJSON, etc.).
Basic data manipulation (selecting, filtering, and sorting data).
Coordinate reference systems: understanding and transforming.

## Spatial Analysis Basics
Objective: Introduce basic spatial analysis techniques.
Topics Covered:
Spatial joins and merging data.
Calculating distances and nearest neighbor analysis.
Basic spatial queries and operations (buffer, intersect, union).

## Visualisation with GeoPandas
Objective: Teach students how to visualise spatial data effectively.
Topics Covered:
Plotting with GeoPandas.
Customizing plots (color, size, legend, etc.).
Integrating with other libraries like Matplotlib and Plotly for enhanced visualizations.




## <br> Thanks! <br> Q & A {style="text-align: center;"}
